<launch>
  <remap from="/tf" to="/ocs/tf" />
  <remap from="/joint_states" to="/ocs/joint_states" />
  <remap from="/robot_description" to="/ocs/robot_description" />

  <include file="$(find drc_task_common)/launch/ocs/models/$(env ROBOT).launch" />

  <node pkg="drc_task_common" type="ocs-basic-info-subscriber.l" name="ocs_basic_info_publisher" output="screen">
  </node>
  <!-- dynamic_reconfigure -->
  <node pkg="drc_task_common" name="ocs_dynamic_reconfigure" type="ocs_dynamic_reconfigure.py" />

  <group ns="ocs">
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="ocs_robot_state_publisher">
      <remap from="/joint_states" to="/ocs/joint_states" />
      <remap from="/tf" to="/ocs/tf"/>
    </node>
    <node pkg="jsk_topic_tools" type="topic_buffer_client" name="joint_states_buffer_client" output="log">
      <remap from="/update" to="/sample_topic_buffer_server/update"/>
      <remap from="/ocs/joint_states_decompressed_update" to="/ocs/joint_states_decompressed"/>
      <remap from="/ocs/joint_states_decompressed_buffered" to="/ocs/joint_states"/>
      <rosparam>
        topics: ["/ocs/joint_states_decompressed"]
        fixed_rate: 0.01
        use_service: false
      </rosparam>
    </node>
    <!-- is it required? -->
    <node pkg="jsk_topic_tools" type="topic_buffer_client" name="point_cloud_buffer_client" output="log"
          if="false">
      <remap from="/update" to="/sample_topic_buffer_server/update"/>
      <remap from="/ocs/communication/point_cloud_update" to="/ocs/communication/point_cloud"/>
      <rosparam>
        topics: ["/ocs/communication/point_cloud"]
        fixed_rate: 0.1
        use_service: false
      </rosparam>
    </node>
    <!-- ground visualization -->
    <node pkg="nodelet" type="nodelet" name="ground_polygon_publisher"
          args="standalone jsk_pcl/StaticPolygonArrayPublisher">
      <rosparam>
        use_message: false
        use_periodic: true
        frame_ids: [ground]
        # Be careful, the order is reversed
        polygon_array: [[[5, 5, 0], [-5, 5, 0], [-5, -5, 0], [5, -5, 0]]]
      </rosparam>
    </node>

    <!-- Remove ground points -->
    <node pkg="jsk_pcl_ros" type="tf_transform_cloud" name="ground_cloud">
      <remap from="~input" to="/ocs/communication/laser_cloud" />
      <rosparam>
        target_frame_id: ground
        use_latest_tf: true
      </rosparam>
    </node>
    <node pkg="jsk_pcl_ros" type="multi_plane_extraction" name="ground_extraction">
      <remap from="~input_polygons" to="ground_polygon_publisher/output_polygons" />
      <remap from="~input_coefficients" to="ground_polygon_publisher/output_coefficients" />
      <remap from="~input" to="/ocs/ground_cloud/output" />
      <rosparam>
        use_async: true
        use_indices: false
      </rosparam>
    </node>
    <node pkg="nodelet" type="nodelet" name="non_ground_points"
          args="standalone pcl/ExtractIndices">
      <remap from="~input" to="/ocs/ground_cloud/output" />
      <remap from="~indices" to="ground_extraction/output/indices" />
      <rosparam>
        negative: true
      </rosparam>
    </node>
  </group>
</launch>
