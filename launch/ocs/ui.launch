<launch>
  <!-- REQUIRED: INPUT_IMAGE input image topic -->
  <arg name="INPUT_IMAGE" default="/ocs/communication/image_rect_color"/>
  <arg name="INPUT_PANORAMA_IMAGE" default="/ocs/communication/panorama_image"/>
  <arg name="INPUT_IMAGE_WIDTH_SCALE" default="/ocs/communication/image_width_scale"/>
  <arg name="INPUT_IMAGE_HEIGHT_SCALE" default="/ocs/communication/image_height_scale"/>
  <arg name="INPUT_PANORAMA_IMAGE_WIDTH_SCALE" default="/ocs/communication/panorama_width_scale"/>
  <arg name="INPUT_PANORAMA_IMAGE_HEIGHT_SCALE" default="/ocs/communication/panorama_height_scale"/>
  <arg name="UI_FILE" default="rqt_ui.perspective" />
  <remap from="/tf" to="/ocs/tf" />
  <remap from="/joint_states" to="/ocs/joint_states" />
  <remap from="/robot_description" to="/ocs/robot_description" />

  <include file="$(find drc_task_common)/launch/ocs/models/$(env ROBOT).launch" />

  <node pkg="rqt_gui" type="rqt_gui" name="rqt_image_view_button"
        args="--perspective-file $(find drc_task_common)/config/$(arg UI_FILE)">
    <rosparam>
      service_button_stair_layout_file: "package://drc_task_common/config/ocs_ui_stair_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_button_layout_file: "package://drc_task_common/config/ocs_ui_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_optional_button_layout_file: "package://drc_task_common/config/ocs_ui_optional_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_radio_button_layout_file: "package://drc_task_common/config/ocs_ui_radio_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_optional_radio_button_layout_file: "package://drc_task_common/config/ocs_ui_optional_radio_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_optional_drill_button_layout_file: "package://drc_task_common/config/ocs_ui_optional_drill_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_recognition_radio_button_layout_file: "package://drc_task_common/config/ocs_ui_recognition_radio_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_req_ik_button_layout_file: "package://drc_task_common/config/ocs_ui_req_ik_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_req_ik_radio_button_layout_file: "package://drc_task_common/config/ocs_ui_req_ik_radio_button_layout.yaml"
    </rosparam>
    <rosparam>
      service_button_jvrc_cheat_file: "package://drc_task_common/config/ocs_ui_jvrc_cheat.yaml"
    </rosparam>
  </node>
  <group ns="image_rect">
    <node pkg="image_view2" type="image_view2" name="rqt_image_view2_engine"
          output="log">
      <remap from="image" to="$(arg INPUT_IMAGE)" />
      <param name="use_window" value="false" />
    </node>
    <include file="$(find drc_task_common)/launch/ocs/ui_interaction_scale.launch">
      <arg name="INPUT_IMAGE" value="$(arg INPUT_IMAGE)" />
      <arg name="INPUT_IMAGE_WIDTH_SCALE" value="$(arg INPUT_IMAGE_WIDTH_SCALE)" />
      <arg name="INPUT_IMAGE_HEIGHT_SCALE" value="$(arg INPUT_IMAGE_HEIGHT_SCALE)" />
    </include>
  </group>
  <group ns="panorama_view">
    <node pkg="image_view2" type="image_view2" name="rqt_panorama_image_view2_engine"
          output="log">
      <remap from="image" to="$(arg INPUT_PANORAMA_IMAGE)" />
      <param name="use_window" value="false" />
    </node>
    <include file="$(find drc_task_common)/launch/ocs/ui_interaction_scale.launch">
      <arg name="INPUT_IMAGE" value="$(arg INPUT_PANORAMA_IMAGE)" />
      <arg name="INPUT_IMAGE_WIDTH_SCALE" value="$(arg INPUT_PANORAMA_IMAGE_WIDTH_SCALE)" />
      <arg name="INPUT_IMAGE_HEIGHT_SCALE" value="$(arg INPUT_PANORAMA_IMAGE_HEIGHT_SCALE)" />
    </include>
  </group>
  <group ns="interaction_scale">

  </group>
  
  <!-- visualize state -->
  <node pkg="jsk_perception" type="image_publisher.py" name="state_image_publisher" respawn="true">
    <remap from="~output" to="state_image"/>
    <rosparam>
      file_name: "ocs_state.png"
    </rosparam>
  </node>

  <node pkg="drc_task_common" type="time_update_text.py" name="highspeed_time_text">
    <remap from="~time" to="/highspeed_receiver/last_received_time" />
    <rosparam>
      prefix: "Highspeed updated "
      suffix: " Sec before"
    </rosparam>
  </node>
  <node pkg="drc_task_common" type="time_update_text.py" name="low_speed_basic_time_text">
    <remap from="~time" to="/ocs_from_fc_basic_low_speed/last_received_time" />
    <rosparam>
      prefix: "BasicInfo updated "
      suffix: " Sec before"
    </rosparam>
  </node>
  <node pkg="drc_task_common" type="time_update_text.py" name="low_speed_time_text">
    <remap from="~time" to="/ocs_from_fc_low_speed/last_received_time" />
    <rosparam>
      prefix: "Lowspeed updated "
      suffix: " Sec before"
    </rosparam>
  </node>
</launch>

