<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="SIMULATION_LAUNCH" default="$(find drcsim_gazebo)/launch/vrc_task_1.launch"/>
  <arg name="USE_HANDLE" default="true"/>
  <arg name="CONTROLLER_DEV" default="/dev/input/js0"/>
  <arg name="CMD_NAMESPACE" default="/drc_vehicle_xp900"/>
  <arg name="ROSBAG_RECORD" default="false"/>
  <arg name="ROOT_LINK" default="pelvis" />
  <arg name="gzworld" default="drc_final_task_1" />"

  <rosparam param="use_sim_time" subst_value="True" />

  <!-- simulation environment -->
  <include file="$(arg SIMULATION_LAUNCH)" >
    <arg name="gzworld" value="$(arg gzworld)" />
  </include>

  <!-- <node pkg="rostopic" type="rostopic" name="disable_handle_brake"
       args="pub /drc_vehicle/hand_brake/cmd std_msgs/Float64 '{data: 0}'" output="screen" /> -->
  <!-- <node pkg="rostopic" type="rostopic" name="ride_on_vehicle"
       args="pub /drc_world/robot_enter_car geometry_msgs/Pose '{}'" output="screen" /> -->

  <!-- handle controller -->
  <group if="$(arg USE_HANDLE)" ns="$(arg CMD_NAMESPACE)">
    <include file="$(find drc_task_common)/launch/fc/vehicle/driving_force_gt.launch">
      <arg name="CONTROLLER_DEV" default="$(arg CONTROLLER_DEV)"/>
    </include>
    <node name="gazebo_drive_simulator_handle_relay" pkg="topic_tools" type="relay"
          args="handle_controller/handle hand_wheel/cmd" respawn="false" output="screen">
      <param name="lazy" type="bool" value="false"/>
    </node>
    <node name="gazebo_drive_simulator_accel_relay" pkg="topic_tools" type="relay"
          args="handle_controller/accel gas_pedal/cmd" respawn="false" output="screen">
      <param name="lazy" type="bool" value="false"/>
    </node>
    <node name="gazebo_drive_simulator_brake_relay" pkg="topic_tools" type="relay"
          args="handle_controller/brake brake_pedal/cmd" respawn="false" output="screen">
      <param name="lazy" type="bool" value="false"/>
    </node>
    <node name="gazebo_drive_simulator_gear_relay" pkg="topic_tools" type="relay"
          args="handle_controller/gear direction/cmd" respawn="false" output="screen">
      <param name="lazy" type="bool" value="false"/>
    </node>
  </group>

  <group unless="$(arg USE_HANDLE)" ns="$(arg CMD_NAMESPACE)">
    <node pkg="gazebo_drive_simulator" type="DrivingControllerToGazeboDriveSimulatorBridge.py" name="drive_controller_to_gazebo_drive_simulator_bridge" output="screen">
      <remap from="~driving_controller_handle" to="/drive/controller/goal_handle_angle"/>
      <remap from="~driving_controller_accel" to="/drive/controller/step"/>
      <remap from="~driving_controller_min_step" to="/drive/controller/min_step"/>
      <remap from="~driving_controller_max_step" to="/drive/controller/max_step"/>
      <remap from="~handle_cmd" to="$(arg CMD_NAMESPACE)/hand_wheel/cmd"/>
      <remap from="~accel_cmd" to="$(arg CMD_NAMESPACE)/gas_pedal/cmd"/>
    </node>
  </group>

  <!-- robot view point -->
  <node pkg="image_view" type="image_view" name="robot_perspective">
    <remap from="image" to="multisense/left/image_rect_color" />
  </node>

  <!-- robot_pose_ekf for publishing odom_combined -->
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom"/>
    <param name="freq" value="10.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="false"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="true"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
    <remap from="imu_data" to="/atlas/imu" />
    <remap from="vo" to="/viso_node/odometry" />
  </node>

  <!-- Add static TF for base_footprint and car_center -->
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_pinned_link" args="0 0 0 0 0 0 base_footprint $(arg ROOT_LINK) 100" />
  <include file="$(find drc_task_common)/launch/fc/vehicle/car_center_tf_publisher.launch" >
    <arg name="SIMULATION_MODE" value="true" />
  </include>

  <!-- run rosbag -->
  <node if="$(arg ROSBAG_RECORD)"
        pkg="gazebo_drive_simulator"
        type="rosbag_record_gazebo_drive_simulator.sh"
        args="--split --size=1024 -o gazebo_drive_simulator_rosbag"
        output="screen" name="gazebo_drive_simulator_rosbag_record" />

</launch>
