<launch>
  <!-- start cpu and ntp monitor for pr1012t -->
  <env name="LANG" value="C" />
  <node pkg="pr2_computer_monitor" name="c3_cpu_monitor" type="cpu_monitor.py" args="--diag-hostname=c3" output="screen" >
    <param name="check_core_temps" type="bool" value="False" />
    <param name="check_ipmi_tool"  type="bool" value="False" />
    <param name="enforce_clock_speed"  type="bool" value="False"/>
    <param name="num_cores" value="8" type="int" />
  </node>
  <node pkg="pr2_computer_monitor" name="ntp_c3" type="ntp_monitor.py" args="c1 --diag-hostname=c3" />

  <!-- this needs knorwob/trunk -->
  <env name="JAVA_HOME" value="/usr/lib/jvm/java-6-openjdk"/>
  <node pkg="json_prolog" type="json_prolog" name="json_prolog">
    <param name="initial_package" value="jsk_semantic_maps" />
    <param name="goal" value="scene1." /> <!-- startup scene1 -->
  </node>

  <!-- for accurate object position launch setup_c1.launch in c1 -->
  <!-- <include file="$(find jsk_2011_07_pr2_semantic)/launch/jsk_pcl_ros/pointcloud_screenpoint.launch"/> -->

 <!-- for SIFT template perception for refrige -->
 <include file="$(find jsk_2011_07_pr2_semantic)/launch/start_perception.launch"/>

 <!-- for collision avoidance in arm planning -->
 <include file="$(find pr2eus_openrave)/launch/pr2_openrave_armplan.launch"/>

  <sphinxdoc><![CDATA[
This script starts demo of pr2_semantic including json_prolog, openrave, perception and c3 monitor.

  ]]></sphinxdoc>

</launch>
