<launch>
  <arg name="INPUT_IMAGE" default="/multisense/left/image_rect_color"/>
  <arg name="INPUT_CAMERA_INFO" default="/multisense/left/camera_info"/>
  <arg name="INPUT_POINT_CLOUD" default="/multisense/resize_1_8/points" />
  <arg name="PASS_THROUGH" default="true" />
  <group ns="drill_recognition_for_button">
    <node pkg="jsk_topic_tools" type="standalone_complexed_nodelet"
          name="manager" respawn="true" output="screen">
      <rosparam subst_value="true">
nodelets:
  - name: passthrough
    type: jsk_topic_tools/Passthrough
    if: $(arg PASS_THROUGH)
    remappings:
      - from: ~input
        to: $(arg INPUT_POINT_CLOUD)
  - name: passthrough
    type: jsk_topic_tools/Relay
    unless: $(arg PASS_THROUGH)
    remappings:
      - from: ~input
        to: $(arg INPUT_POINT_CLOUD)
  - name: hand_clipper
    type: jsk_pcl/AttentionClipper
    remappings:
      - from: ~input
        to: $(arg INPUT_CAMERA_INFO)
      - from: ~input/points
        to: passthrough/output
      - from: ~input/box
        to: hand_box
  - name: filtered_cloud
    type: pcl/ExtractIndices
    remappings:
      - from: ~input
        to: passthrough/output
      - from: ~indices
        to: hand_clipper/output/point_indices
  - name: normal_estimation
    type: jsk_pcl/NormalEstimationOMP
    remappings:
      - from: ~input
        to: filtered_cloud/output
  - name: euclidean_filter
    type: jsk_pcl/EuclideanClustering
    remappings:
      - from: ~input
        to: filtered_cloud/output
  - name: euclidean_filter_decomposer
    type: jsk_pcl/ClusterPointIndicesDecomposer
    remappings:
      - from: ~input
        to: filtered_cloud/output
      - from: ~target
        to: euclidean_filter/output
  - name: nearest_cluster_cloud
    type: pcl/ExtractIndices
    remappings:
      - from: ~input
        to: filtered_cloud/output
      - from: ~indices
        to: nearest_cluster/output/indices
  - name: snapshot
    type: jsk_topic_tools/Snapshot
    remappings:
      - from: ~input
        to: standing_drill_detector/output/pose
  - name: rotate_snapshot
    type: jsk_topic_tools/Snapshot
    remappings:
      - from: ~input
        to: standing_drill_detector/output/pose
      </rosparam>
    </node>
    <group ns="hand_clipper">
      <param name="frame_id" value="left_camera_optical_frame" />
    </group>
    <group ns="normal_estimation">
      <rosparam>
        k_search: 0
        radius_search: 0.05
      </rosparam>
    </group>
    <group ns="snapshot">
      <rosparam>
        latch: true
      </rosparam>
    </group>
    <group ns="rotate_snapshot">
      <rosparam>
        latch: true
      </rosparam>
    </group>
    <node pkg="drc_task_common" type="hand_box_publisher.py" name="hand_box_publisher" respawn="true">
    </node>  
    <node pkg="drc_task_common"
          type="nearest_box_indices.py"
          name="nearest_cluster">
      <remap from="~input/box_array" to="euclidean_filter_decomposer/boxes" />
      <remap from="~input/indices" to="euclidean_filter/output" />
    </node>
    <node pkg="drc_task_common" type="static_transform_bounding_box_array.py"
          name="box_rotate">
      <remap from="~input" to="nearest_cluster/output/box_array" />
      <rosparam>
        transform: [0, 0, 0, 1.57, 0, 0]
      </rosparam>
    </node>
    <node pkg="drc_task_common" type="standing_drill_detector"
	  name="standing_drill_detector" output="screen">
      <remap from="~input" to="nearest_cluster_cloud/output" />
      <remap from="~input/box_array" to="box_rotate/output" />
      <remap from="~input/indices" to="nearest_cluster/output/cluster_indices" />
      <rosparam>
        drill_min_height: 0.2
        drill_max_height: 0.4
        cylinder_eps_angle: 0.1
        cylinder_distance_threshold: 0.005
        cylinder_distance_normal_weight: 0.5
        cylinder_max_iterations: 1000
        cylinder_probability: 0.03
        foot_z_offset: 0.13
        use_cylinder_axis: False
        cylinder_z_offset: 0.05
        cylinder_length: 0.2
        calc_cylinder_center: true
        button_estimation_method: 2
      </rosparam>
    </node>
  </group>
</launch>
