<launch>
  <arg name="OCS_IP" default="localhost"/>
  <arg name="FC_IP" default="localhost"/>
  <arg name="OCS_TO_FC_PORT" default="700"/>
  <arg name="FC_TO_OCS_PORT" default="701"/>
  <arg name="FC_TO_OCS_BASIC_PORT" default="702"/>
  <arg name="DYNAMIC_RECONFIGURE_PORT" default="703"/>
  <arg name="EUS_OUTPUT_PORT" default="704"/>
  <arg name="EUS_INPUT_PORT" default="705"/>
  <arg name="OCS_TO_FC_VEHICLE_PORT" default="706"/>
  <arg name="FC_TO_OCS_VEHICLE_PORT" default="707"/>

  <node pkg="jsk_network_tools" type="silverhammer_highspeed_streamer.py"
        output="log"
        name="highspeed_streamer">
    <rosparam subst_value="true">
      message: drc_com_common/FC2OCSLarge
      to_port: 16485
      to_ip: "$(arg OCS_IP)"
      send_rate: 10
      bandwidth: 280000000
      packet_size: 1472
    </rosparam>
  </node>
  <node pkg="jsk_network_tools" type="silverhammer_highspeed_streamer.py"
        output="log"
        name="highspeed_streamer_reliable" if="false">
    <rosparam subst_value="true">
      message: drc_com_common/FC2OCSLargeReliable
      to_port: 16486
      to_ip: "$(arg OCS_IP)"
      send_rate: 10
      bandwidth: 280000000
      packet_size: 1472
    </rosparam>
  </node>
  
  <node pkg="jsk_network_tools" type="silverhammer_lowspeed_receiver.py"
        output="log" launch-prefix="sudo"
        name="fc_from_ocs_low_speed">
    <rosparam subst_value="true">
      message: drc_com_common/OCS2FCSmall
      receive_port: $(arg OCS_TO_FC_PORT)
      receive_ip: "0.0.0.0"
      event_driven: true
      receive_buffer_size: 700
    </rosparam>
  </node>

  <node pkg="jsk_network_tools" type="silverhammer_lowspeed_streamer.py"
        output="log"
        name="fc_to_ocs_low_speed">
    <rosparam subst_value="true">
      message: drc_com_common/FC2OCSSmall
      to_port: $(arg FC_TO_OCS_PORT)
      to_ip: $(arg OCS_IP)
    </rosparam>
  </node>

  <node pkg="jsk_network_tools" type="silverhammer_lowspeed_streamer.py"
        output="log"
        name="fc_to_ocs_basic_low_speed">
    <rosparam subst_value="true">
      message: drc_com_common/FC2OCSBasicInfoSmall
      to_port: $(arg FC_TO_OCS_BASIC_PORT)
      to_ip: $(arg OCS_IP)
      send_rate: 1.0
    </rosparam>
  </node>


  <include file="$(find drc_com_common)/launch/fc_relay.launch" />
  
  <!-- joint angles -->
  <node pkg="jsk_calibration" type="joint_states_appender.py" name="joint_states_appender" />
  <node pkg="jsk_robot_utils" type="joint-state-compressor.l" 
        name="joint_state_compressor">
    <remap from="/joint_states" to="/joint_states_appended" />
    <rosparam>
      message_type: drc_com_common/HumanoidJointAngles
    </rosparam>
  </node>

  <node pkg="jsk_network_tools" type="silverhammer_lowspeed_receiver.py"
        output="log"
        name="fc_from_ocs_reconfigure" launch-prefix="sudo">
    <rosparam subst_value="true">
      message: drc_task_common/DRCParametersMessage
      receive_port: $(arg DYNAMIC_RECONFIGURE_PORT)
      receive_ip: "0.0.0.0"
    </rosparam>
  </node>

  <!-- for vehicle task -->
  <node pkg="jsk_network_tools" type="silverhammer_lowspeed_receiver.py"
        output="log" launch-prefix="sudo"
        name="fc_from_ocs_vehicle">
    <rosparam subst_value="true">
      message: drc_com_common/VehicleOCS2FCSmall
      receive_port: $(arg OCS_TO_FC_VEHICLE_PORT)
      receive_ip: "0.0.0.0"
    </rosparam>
  </node>
  <node pkg="jsk_network_tools" type="silverhammer_lowspeed_streamer.py"
        output="log"
        name="fc_to_ocs_vehicle">
    <rosparam subst_value="true">
      message: drc_com_common/VehicleFC2OCSSmall
      to_port: $(arg FC_TO_OCS_VEHICLE_PORT)
      to_ip: $(arg OCS_IP)
      event_driven: true
    </rosparam>
  </node>
  
  <include file="$(find roseus_remote)/launch/roseus_eusserver.launch">
    <arg name="FC_IP" value="$(arg FC_IP)" />
    <arg name="OCS_IP" value="$(arg OCS_IP)" />
    <arg name="EUS_INPUT_PORT" value="$(arg EUS_INPUT_PORT)" />
    <arg name="EUS_OUTPUT_PORT" value="$(arg EUS_OUTPUT_PORT)" />
    <arg name="LAUNCH_PREFIX" value="sudo" />
  </include>
</launch>

