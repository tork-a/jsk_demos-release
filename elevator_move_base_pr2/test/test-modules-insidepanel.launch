<launch>
  <arg name="ROBOT" default="$(optenv ROBOT sim)" />

  <param name="use_sim_time" value="true"/>
  <include file="$(find pr2_machine)/$(arg ROBOT).machine"/>
  <include file="$(find elevator_move_base_pr2)/launch/elevator_move_base_modules.xml">
    <arg name="ROBOT" value="$(arg ROBOT)" />
  </include>

  <!-- inputs are tf, image_raw, camera_info, joint_states -->
  <node pkg="rosbag" type="play" name="rosbag_play"
        args="$(find elevator_move_base_pr2)/test/test-eng2-inside-panel.bag -l -r 0.2 --clock" />

  <!-- test for panel pose detection -->
  <test test-name="panel_pose_detection" pkg="roseus" type="roseus"
     args="$(find elevator_move_base_pr2)/test/test-panel-pose-detection.l"/>

  <!-- test for number recognition -->
  <test test-name="number_recognition" pkg="roseus" type="roseus"
     args="$(find elevator_move_base_pr2)/test/test-number-recognition.l"/>


  <sphinxdoc><![CDATA[
This scripts is test for elevator inside panel.

.. video:: build/images/call-panel-pose
  :width: 600

Then apply affine transform to camera image for template match.
Template is number region of the panel.

.. video:: build/images/inside-panel-number
  :width: 600

  ]]></sphinxdoc>

  <node type="rviz" pkg="rviz" name="rviz" respawn="true"
        args="-d $(find elevator_move_base_pr2)/test/test-modules-insidepanel.vcg"
        launch-prefix="glc-capture --start --out=$(find elevator_move_base_pr2)/build/test-modules-insidepanel.glc" />

  <!-- we assume test code is invoked in alphabet order of test-name -->
  <atest type="glc_encode.sh" pkg="jsk_tools" test-name="z_encode_test1" args="$(find elevator_move_base_pr2)/build/test-modules-insidepanel.glc --ctx 1 -o $(find elevator_move_base_pr2)/build/call-panel-pose.mp4" time-limit="300"/>
  <atest type="glc_encode.sh" pkg="jsk_tools" test-name="z_encode_test2" args="$(find elevator_move_base_pr2)/build/test-modules-insidepanel.glc --ctx 2 -o $(find elevator_move_base_pr2)/build/inside-panel-number.mp4" time-limit="300"/>

</launch>
